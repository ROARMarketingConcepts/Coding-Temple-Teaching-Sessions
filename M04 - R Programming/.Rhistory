# 3. Updating second element twice origianl value
my_vector_twice <- my_vector[2] * 2
student_data <- data.frame(Student_ID = c(1:5), Name = c("Bob","John","Gus","Willy","lilly"), Score = c(87,90,91,62,98))
student_data
student_data$Score[3] <- 95
student_data
my_list <- list(
c(10, 20, 30),
c("USA", "Englend", "Norway"),
data.frame(
City = c("New York", "London", "Oslo"),
Population = c(3429000, 2030000, 500000)
)
)
my_list
# Access and print the second element of the character vector within my_list
second_country <- my_list[[2]][2]
print(second_country)
library("dplyr")
mtcars
select(mtcars,cyl,disp,hp,drat)
high_hp_cars <- data.frame(filter(mtcars, hp > 150))
setwd("~/Desktop/Machine Learning and Data Analysis/Coding Temple/Coding Temple Teaching Sessions/M04 - R Programming")
library(tidyverse)
library(lubridate)
library(skimr)
install.packages("skimr")
library(tidyverse)
library(lubridate)
library(skimr)
life_exp <- read.csv("Life_Expectancy_Data.csv")
library(tidyverse)
library(lubridate)
library(skimr)
life_exp <- read.csv("Life Expectancy Data.csv")
View(life_exp)
str(life_exp)  # View the structure of the dataset
head(life_exp)  # Preview the first few rows
summary(life_exp)  # Summary statistics of the dataset
skim(life_exp)  # Detailed skim of the dataset
missing_data <- colSums(is.na(life_exp))
missing_percent <- (missing_data/nrow(life_exp))*100
missing_df <- data.frame(
variable = names(missing_data),
missing_percent = missing_percent
)
ggplot(missing_df, aes(x = reorder(variable, missing_percent),
y = missing_percent)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal() +
labs(title = "Percentage of Missing Values by Variable",
x = "Variables", y = "Missing Percentage")
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
library(tidyverse)
library(lubridate)
library(skimr)
life_exp <- read.csv("Life Expectancy Data.csv")
knit_with_parameters("~/Desktop/Machine Learning and Data Analysis/Coding Temple/Coding Temple Teaching Sessions/M04 - R Programming/Guided_Demo_Life_Expectancy_Dataset.Rmd")
library(tidyverse)
library(lubridate)
library(skimr)
life_exp <- read.csv("Life_Expectancy_Data.csv")
setwd("~/Desktop/Machine Learning and Data Analysis/Coding Temple/Coding Temple Teaching Sessions/M04 - R Programming")
library(tidyverse)
library(lubridate)
library(skimr)
life_exp <- read.csv("Life_Expectancy_Data.csv")
library(tidyverse)
library(lubridate)
library(skimr)
life_exp <- read.csv("Life Expectancy Data.csv")
str(life_exp)  # View the structure of the dataset
head(life_exp)  # Preview the first few rows
summary(life_exp)  # Summary statistics of the dataset
skim(life_exp)  # Detailed skim of the dataset
missing_data <- colSums(is.na(life_exp))
missing_percent <- (missing_data/nrow(life_exp))*100
missing_df <- data.frame(
variable = names(missing_data),
missing_percent = missing_percent
)
install.packages("pdflatex")
missing_data <- colSums(is.na(life_exp))
missing_percent <- (missing_data/nrow(life_exp))*100
missing_df <- data.frame(
variable = names(missing_data),
missing_percent = missing_percent
)
ggplot(missing_df, aes(x = reorder(variable, missing_percent),
y = missing_percent)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal() +
labs(title = "Percentage of Missing Values by Variable",
x = "Variables", y = "Missing Percentage")
life_clean <- life_exp %>%
mutate(
Year = as.Date(paste0(Year, "-01-01")),  # Convert Year to Date format
Development_Status = ifelse(Status == "Developing", "Developing", "Developed"),  # Create a Development Status variable
GDP_per_capita = GDP / Population  # Create new meaningful variable for GDP per capita
) %>%
filter(!is.na(Life.expectancy))  # Remove rows with missing life expectancy values
View(life_clean)
country_stats <- life_clean %>%
group_by(Country, Development_Status) %>%
summarise(
Avg_Life_Exp = mean(Life.expectancy),
Avg_GDP_per_capita = mean(GDP_per_capita),
Avg_Schooling = mean(Schooling, na.rm = TRUE),
Avg_BMI = mean(BMI, na.rm = TRUE)
) %>%
arrange(desc(Avg_Life_Exp))
scatter_plot <- ggplot(life_clean,
aes(x = GDP_per_capita, y = Life.expectancy, color = Development_Status)) +
geom_point(alpha = 0.6) +
scale_x_log10() +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(title = "Life Expectancy vs GDP per Capita",
x = "GDP per Capita (log scale)", y = "Life Expectancy", color = "Development Status")
print(scatter_plot)
library(tidyverse)
library(lubridate)
library(skimr)
life_exp <- read.csv("Life Expectancy Data.csv")
library(tidyverse)
library(lubridate)
library(skimr)
life_exp <- read.csv("Life Expectancy Data.csv")
str(life_exp)  # View the structure of the dataset
head(life_exp)  # Preview the first few rows
summary(life_exp)  # Summary statistics of the dataset
skim(life_exp)  # Detailed skim of the dataset
missing_data <- colSums(is.na(life_exp))
missing_percent <- (missing_data/nrow(life_exp))*100
missing_df <- data.frame(
variable = names(missing_data),
missing_percent = missing_percent
)
ggplot(missing_df, aes(x = reorder(variable, missing_percent),
y = missing_percent)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal() +
labs(title = "Percentage of Missing Values by Variable",
x = "Variables", y = "Missing Percentage")
life_clean <- life_exp %>%
mutate(
Year = as.Date(paste0(Year, "-01-01")),  # Convert Year to Date format
# Create a Development Status variable
Development_Status = ifelse(Status == "Developing", "Developing", "Developed"),
GDP_per_capita = GDP / Population  # Create new meaningful variable for GDP per capita
) %>%
filter(!is.na(Life.expectancy))  # Remove rows with missing life expectancy values
country_stats <- life_clean %>%
group_by(Country, Development_Status) %>%
summarise(
Avg_Life_Exp = mean(Life.expectancy),
Avg_GDP_per_capita = mean(GDP_per_capita),
Avg_Schooling = mean(Schooling, na.rm = TRUE),
Avg_BMI = mean(BMI, na.rm = TRUE)
) %>%
arrange(desc(Avg_Life_Exp))
country_stats <- life_clean %>%
group_by(Country, Development_Status) %>%
summarise(
Avg_Life_Exp = mean(Life.expectancy),
# Avg_GDP_per_capita = mean(GDP_per_capita),
#  Avg_Schooling = mean(Schooling, na.rm = TRUE),
#  Avg_BMI = mean(BMI, na.rm = TRUE)
) %>%
arrange(desc(Avg_Life_Exp))
library(tidyverse)
library(lubridate)
library(skimr)
library(dplyr)
life_exp <- read.csv("Life Expectancy Data.csv")
country_stats <- life_clean %>%
group_by(Country, Development_Status) %>%
summarise(
Avg_Life_Exp = mean(Life.expectancy),
# Avg_GDP_per_capita = mean(GDP_per_capita),
#  Avg_Schooling = mean(Schooling, na.rm = TRUE),
#  Avg_BMI = mean(BMI, na.rm = TRUE)
) %>%
arrange(desc(Avg_Life_Exp))
country_stats <- life_clean %>%
group_by(Country, Development_Status) %>%
summarise(
Avg_Life_Exp = mean(Life.expectancy))
country_stats <- life_clean %>%
group_by(Country, Development_Status) %>%
summarise(
Avg_Life_Exp = mean(Life.expectancy))
country_stats <- life_clean %>%
group_by(Country) %>%
summarise(
Avg_Life_Exp = mean(Life.expectancy))
# Avg_GDP_per_capita = mean(GDP_per_capita),
#  Avg_Schooling = mean(Schooling, na.rm = TRUE),
#  Avg_BMI = mean(BMI, na.rm = TRUE)
#) # %>%
# arrange(desc(Avg_Life_Exp))
country_stats <- life_clean %>%
group_by(Country,Development_Status) %>%
summarise(
Avg_Life_Exp = mean(Life.expectancy),
Avg_GDP_per_capita = mean(GDP_per_capita),
Avg_Schooling = mean(Schooling, na.rm = TRUE),
Avg_BMI = mean(BMI, na.rm = TRUE))  %>%
arrange(desc(Avg_Life_Exp))
life_clean <- life_exp %>%
mutate(
Year = as.Date(paste0(Year, "-01-01")),  # Convert Year to Date format
# Create a Development Status variable
Development_Status = ifelse(Status == "Developing", "In process", "Developed"),
GDP_per_capita = GDP / Population  # Create new meaningful variable for GDP per capita
) %>%
filter(!is.na(Life.expectancy))  # Remove rows with missing life expectancy values
life_clean <- life_exp %>%
mutate(
Year = as.Date(paste0(Year, "-01-01")),  # Convert Year to Date format
# Create a Development Status variable
Development_Status = ifelse(Status == "Developing", "In process", "Developed"),
GDP_per_capita = GDP / Population  # Create new meaningful variable for GDP per capita
) %>%
filter(!is.na(Life.expectancy))  # Remove rows with missing life expectancy values
country_stats <- life_clean %>%
group_by(Country,Development_Status) %>%
summarise(
Avg_Life_Exp = mean(Life.expectancy),
Avg_GDP_per_capita = mean(GDP_per_capita),
Avg_Schooling = mean(Schooling, na.rm = TRUE),
Avg_BMI = mean(BMI, na.rm = TRUE))  %>%
arrange(desc(Avg_Life_Exp))
life_clean <- life_exp %>%
mutate(
Year = as.Date(paste0(Year, "-01-01")),  # Convert Year to Date format
# Create a Development Status variable
Development_Status = ifelse(Status == "Developing", "Developing", "Developed"),
GDP_per_capita = GDP / Population  # Create new meaningful variable for GDP per capita
) %>%
filter(!is.na(Life.expectancy))  # Remove rows with missing life expectancy values
View(life_clean)
country_stats <- life_clean %>%
group_by(Country) %>%
summarise(
Avg_Life_Exp = mean(Life.expectancy),
Avg_GDP_per_capita = mean(GDP_per_capita),
Avg_Schooling = mean(Schooling, na.rm = TRUE),
Avg_BMI = mean(BMI, na.rm = TRUE))  %>%
arrange(desc(Avg_Life_Exp))
country_stats <- life_clean %>%
group_by(Development_Status,Country) %>%
summarise(
Avg_Life_Exp = mean(Life.expectancy),
Avg_GDP_per_capita = mean(GDP_per_capita),
Avg_Schooling = mean(Schooling, na.rm = TRUE),
Avg_BMI = mean(BMI, na.rm = TRUE))  %>%
arrange(desc(Avg_Life_Exp))
install.packages("cli")
install.packages("cli")
library(tidyverse)
library(lubridate)
library(skimr)
library(dplyr)
life_exp <- read.csv("Life Expectancy Data.csv")
str(life_exp)  # View the structure of the dataset
head(life_exp)  # Preview the first few rows
summary(life_exp)  # Summary statistics of the dataset
skim(life_exp)  # Detailed skim of the dataset
missing_data <- colSums(is.na(life_exp))
missing_percent <- (missing_data/nrow(life_exp))*100
missing_df <- data.frame(
variable = names(missing_data),
missing_percent = missing_percent
)
ggplot(missing_df, aes(x = reorder(variable, missing_percent),
y = missing_percent)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal() +
labs(title = "Percentage of Missing Values by Variable",
x = "Variables", y = "Missing Percentage")
life_clean <- life_exp %>%
mutate(
Year = as.Date(paste0(Year, "-01-01")),  # Convert Year to Date format
# Create a Development Status variable
Development_Status = ifelse(Status == "Developing", "Developing", "Developed"),
GDP_per_capita = GDP / Population  # Create new meaningful variable for GDP per capita
) %>%
filter(!is.na(Life.expectancy))  # Remove rows with missing life expectancy values
country_stats <- life_clean %>%
group_by(Country, Development_Status) %>%
summarise(
Avg_Life_Exp = mean(Life.expectancy),
Avg_GDP_per_capita = mean(GDP_per_capita),
Avg_Schooling = mean(Schooling, na.rm = TRUE),
Avg_BMI = mean(BMI, na.rm = TRUE))  %>%
arrange(desc(Avg_Life_Exp))
View(country_stats)
scatter_plot <- ggplot(life_clean,
aes(x = GDP_per_capita, y = Life.expectancy, color = Development_Status)) +
geom_point(alpha = 0.6) +
scale_x_log10() +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(title = "Life Expectancy vs GDP per Capita",
x = "GDP per Capita (log scale)", y = "Life Expectancy", color = "Development Status")
print(scatter_plot)
yearly_trends <- life_clean %>%
group_by(Year, Development_Status) %>%
summarise(
Avg_Life_Exp = mean(Life.expectancy),
Avg_GDP_per_capita = mean(GDP_per_capita),
Avg_Alcohol = mean(Alcohol, na.rm = TRUE),
Avg_BMI = mean(BMI, na.rm = TRUE)
) %>%
ungroup()
time_plot <- ggplot(yearly_trends,
aes(x = Year, y = Avg_Life_Exp, color = Development_Status)) +
geom_line(linewidth = 1) +
geom_point() +
theme_minimal() +
labs(title = "Life Expectancy Trends Over Time",
subtitle = "Comparing Developed vs Developing Countries",
x = "Year", y = "Average Life Expectancy", color = "Development Status") +
theme(legend.position = "bottom")
print(time_plot)
scatter_plot <- ggplot(life_clean,
aes(x = GDP_per_capita, y = Life.expectancy, color = Development_Status)) +
geom_point(alpha = 0.6) +
scale_x_log10() +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(title = "Life Expectancy vs GDP per Capita",
x = "GDP per Capita (log scale)", y = "Life Expectancy", color = "Development Status")
print(scatter_plot)
View(country_stats)
country_stats <- life_clean %>%
group_by(Development_Status,Country) %>%
summarise(
Avg_Life_Exp = mean(Life.expectancy),
Avg_GDP_per_capita = mean(GDP_per_capita),
Avg_Schooling = mean(Schooling, na.rm = TRUE),
Avg_BMI = mean(BMI, na.rm = TRUE))  %>%
arrange(desc(Avg_Life_Exp))
View(country_stats)
country_stats <- life_clean %>%
group_by(Country) %>% #,Development_Status) %>%
summarise(
Avg_Life_Exp = mean(Life.expectancy),
Avg_GDP_per_capita = mean(GDP_per_capita),
Avg_Schooling = mean(Schooling, na.rm = TRUE),
Avg_BMI = mean(BMI, na.rm = TRUE))  %>%
arrange(desc(Avg_Life_Exp))
library(tidyverse)
library(lubridate)
library(skimr)
library(dplyr)
life_exp <- read.csv("Life Expectancy Data.csv")
str(life_exp)  # View the structure of the dataset
head(life_exp)  # Preview the first few rows
summary(life_exp)  # Summary statistics of the dataset
skim(life_exp)  # Detailed skim of the dataset
missing_data <- colSums(is.na(life_exp))
missing_percent <- (missing_data/nrow(life_exp))*100
missing_df <- data.frame(
variable = names(missing_data),
missing_percent = missing_percent
)
ggplot(missing_df, aes(x = reorder(variable, missing_percent),
y = missing_percent)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal() +
labs(title = "Percentage of Missing Values by Variable",
x = "Variables", y = "Missing Percentage")
life_clean <- life_exp %>%
mutate(
Year = as.Date(paste0(Year, "-01-01")),  # Convert Year to Date format
# Create a Development Status variable
Development_Status = ifelse(Status == "Developing", "Developing", "Developed"),
GDP_per_capita = GDP / Population  # Create new meaningful variable for GDP per capita
) %>%
filter(!is.na(Life.expectancy))  # Remove rows with missing life expectancy values
country_stats <- life_clean %>%
group_by(Country) %>%    #,Development_Status) %>%
summarise(
Avg_Life_Exp = mean(Life.expectancy),
Avg_GDP_per_capita = mean(GDP_per_capita),
Avg_Schooling = mean(Schooling, na.rm = TRUE),
Avg_BMI = mean(BMI, na.rm = TRUE))  %>%
arrange(desc(Avg_Life_Exp))
scatter_plot <- ggplot(life_clean,
aes(x = GDP_per_capita, y = Life.expectancy, color = Development_Status)) +
geom_point(alpha = 0.6) +
scale_x_log10() +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(title = "Life Expectancy vs GDP per Capita",
x = "GDP per Capita (log scale)", y = "Life Expectancy", color = "Development Status")
print(scatter_plot)
yearly_trends <- life_clean %>%
group_by(Year, Development_Status) %>%
summarise(
Avg_Life_Exp = mean(Life.expectancy),
Avg_GDP_per_capita = mean(GDP_per_capita),
Avg_Alcohol = mean(Alcohol, na.rm = TRUE),
Avg_BMI = mean(BMI, na.rm = TRUE)
) %>%
ungroup()
time_plot <- ggplot(yearly_trends,
aes(x = Year, y = Avg_Life_Exp, color = Development_Status)) +
geom_line(linewidth = 1) +
geom_point() +
theme_minimal() +
labs(title = "Life Expectancy Trends Over Time",
subtitle = "Comparing Developed vs Developing Countries",
x = "Year", y = "Average Life Expectancy", color = "Development Status") +
theme(legend.position = "bottom")
print(time_plot)
scatter_plot <- ggplot(life_clean,
aes(x = GDP_per_capita, y = Life.expectancy, color = Development_Status)) +
geom_point(alpha = 0.6) +
scale_x_log10() +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(title = "Life Expectancy vs GDP per Capita",
x = "GDP per Capita (log scale)", y = "Life Expectancy", color = "Development Status")
print(scatter_plot)
library(tidyverse)
library(lubridate)
library(skimr)
library(dplyr)
life_exp <- read.csv("WHR2023.csv")
library(tidyverse)
library(lubridate)
library(skimr)
library(dplyr)
life_exp <- read.csv("WHR2023.csv")
View(life_exp)
library(tidyverse)
library(lubridate)
library(skimr)
library(dplyr)
whr <- read.csv("WHR2023.csv")
str(whr)  # View the structure of the dataset
head(whr)  # Preview the first few rows
summary(whr)  # Summary statistics of the dataset
skim(whr)  # Detailed skim of the dataset
missing_data <- colSums(is.na(whr))
missing_percent <- (missing_data/nrow(whr))*100
missing_df <- data.frame(
variable = names(missing_data),
missing_percent = missing_percent
)
ggplot(missing_df, aes(x = reorder(variable, missing_percent),
y = missing_percent)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal() +
labs(title = "Percentage of Missing Values by Variable",
x = "Variables", y = "Missing Percentage")
View(whr)
View(whr)
median_GDP = median(whr$Logged.GDP.per.capita)
whr_clean <- whr %>%
mutate(# Create a GDP variable
GDP = ifelse(Logged.GDP.per.capita >= median_GDP, "High GDP", "Low GDP")) %>%
filter(!is.na(Ladder.score))  # Remove rows with missing life expectancy values
View(whr_clean)
whr_clean <- whr %>%
mutate(# Create a GDP variable
GDP = ifelse(Logged.GDP.per.capita >= median(whr$Logged.GDP.per.capita), "High GDP", "Low GDP")) %>%
filter(!is.na(Ladder.score))  # Remove rows with missing life expectancy values
country_stats <- whr_clean %>%
group_by(GDP) %>%
summarise(
Avg_Happiness_Score = mean(Ladder.score))
arrange(desc(Avg_Happiness))
country_stats <- whr_clean %>%
group_by(GDP) %>%
summarise(
Avg_Happiness_Score = mean(Ladder.score))
arrange(desc(Avg_Happiness_Score))
country_stats <- whr_clean %>%
group_by(GDP) %>%
summarise(
Avg_Happiness_Score = mean(Ladder.score)) %>%
arrange(desc(Avg_Happiness_Score))
box_plot <- ggplot(whr_clean,
aes(x = GDP, y = Ladder.score)) +
geom_boxplot() +
geom_jitter(alpha = 0.1) +
theme_minimal() +
labs(title = "Life Expectancy Distribution by Development Status",
x = "Development Status", y = "Life Expectancy")
print(box_plot)
box_plot <- ggplot(whr_clean,
aes(x = GDP, y = Ladder.score)) +
geom_boxplot() +
geom_jitter(alpha = 0.1) +
theme_minimal() +
labs(title = "Happiness Score by GDP",
x = "GDP", y = "Happiness Score")
print(box_plot)
t_test_result <- t.test(Ladder.score ~ GDP, data = whr_clean)
print(t_test_result)
setwd("~/Desktop/Machine Learning and Data Analysis/Coding Temple/Coding Temple Teaching Sessions/M04 - R Programming")
