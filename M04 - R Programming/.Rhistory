# Create a histogram
ggplot(mtcars, aes(x=wt)) +
geom_histogram(color = "black", fill = "steelblue", binwidth = 0.1) +
labs(x = "Weight", y = "Frequency") +
ggtitle("Histogram of Weight") +
theme_minimal()
ggplot(mtcars, aes(x = factor(cyl))) +
geom_bar(color = "black", fill = "steelblue") +
labs(title = "Frequency of Number of Cylinders", x = "Number of Cylinders", y = "Count") + theme_minimal()
ggplot(mtcars, aes(x = factor(gear))) +
geom_bar(color = "black", fill = "steelblue") +
labs(title = "Frequency of Gear Type", x = "Gear Type", y = "Count") + theme_minimal()
# Load the datasets package (usually not necessary as it's loaded by default)
library(datasets)
library(ggplot2)
# Import the CO2 dataset
data(mtcars)
# Display the first few rows of the dataset
head(mtcars)
# Get a set of summary stats for the dataset
summary(mtcars)
positive <- c("21", "22", "33", "21", "27") ##Percentage
negative<- c("71", "77", "67", "79", "73")  ##Precentage
sample <- c("Hr", "Fi", "We", "Pa", "Ki")
mydata <- data.frame(positive , negative, sample)
mydata
mydata %>% pivot_longer(cols = !sample, names_to = "status", values_to = "percentage") %>%
ggplot(aes(fill = status, x = sample, y = percentage)) +
geom_bar(position = "stack", stat = "identity")
mydata %>% pivot_longer(cols = !sample, names_to = "status", values_to = ="percentage") %>%
mydata %>% pivot_longer(cols = !sample, names_to = "status", values_to ="percentage") %>%
ggplot(aes(fill = status, x = sample, y = percentage)) +
geom_bar(position = "stack", stat = "identity")
library(tidyverse)
mydata %>% pivot_longer(cols = !sample, names_to = "status", values_to ="percentage") %>%
ggplot(aes(fill = status, x = sample, y = percentage)) +
geom_bar(position = "stack", stat = "identity")
library(datasets)
library(ggplot2)
data(mtcars)
library(datasets)
library(ggplot2)
data(mtcars)
head(mtcars)
ggplot(mtcars, aes(x = cyl,fill = vs )) +
geom_bar()
ggplot(mtcars, aes(x = cyl,fill = gear )) +
geom_bar()
ggplot(mtcars, aes(x = factor(cyl),fill = gear )) +
geom_bar()
ggplot(mtcars, aes(x = factor(cyl),fill = factor(gear)) +
geom_bar()
ggplot(mtcars, aes(x = factor(cyl),fill = factor(gear))) +
geom_bar()
ggplot(mtcars, aes(x = factor(cyl),fill = factor(gear))) +
geom_bar() +
labs(x = "Number of Cylinders")
ggplot(mtcars, aes(x = factor(cyl),fill = factor(gear))) +
geom_bar() +
labs(x = "Number of Cylinders", fill = "Number of Gears")
my_vector <- c(1,3,5,7,9)
print(my_vector)
my_vector [3]
my_vector `<- c(1,3,5,7,9)
my_vector [2] * 2
my_vector `<- c(1,3,5,7,9)
my_vector <- c(1,3,5,7,9)
my_vector <- my_vector [2] * 2
my_vector
my_list <- list(vector = c(10,20,30), country c("USA", "England", "Japan"),
my_list <- list(vector = c(10,20,30), country = c("USA", "England", "Japan"),
city =  data.frame c("Philadelphia", "London","Tokyo"),
# Victor:
# 1. create a numeric vector named my_victor
my_vector <- c(1,3,5,7,9)
# 2. Extract the third element from my_vector
third_element_extract <- my_victor[3]
# Victor:
# 1. create a numeric vector named my_victor
my_vector <- c(1,3,5,7,9)
# 2. Extract the third element from my_vector
third_element_extract <- my_vector[3]
# 3. Updating second element twice origianl value
my_vector_twice <- my_vector[2] * 2
student_data <- data.frame(Student_ID = c(1:5), Name = c("Bob","John","Gus","Willy","lilly"), Score = c(87,90,91,62,98))
student_data
student_data$Score[3] <- 95
student_data
my_list <- list(
c(10, 20, 30),
c("USA", "Englend", "Norway"),
data.frame(
City = c("New York", "London", "Oslo"),
Population = c(3429000, 2030000, 500000)
)
)
my_list
# Access and print the second element of the character vector within my_list
second_country <- my_list[[2]][2]
print(second_country)
library("dplyr")
mtcars
select(mtcars,cyl,disp,hp,drat)
high_hp_cars <- data.frame(filter(mtcars, hp > 150))
library(tidyverse)
library(lubridate)
library(skimr)
library(dplyr)
life_exp <- read.csv("data/Life Expectancy Data.csv")
library(tidyverse)
library(lubridate)
library(skimr)
library(dplyr)
life_exp <- read.csv("data/Life Expectancy Data.csv")
View(life_exp)
str(life_exp)  # View the structure of the dataset
head(life_exp)  # Preview the first few rows
summary(life_exp)  # Summary statistics of the dataset
skim(life_exp)  # Detailed skim of the dataset
missing_data <- colSums(is.na(life_exp))
missing_percent <- (missing_data/nrow(life_exp))*100
missing_df <- data.frame(
variable = names(missing_data),
missing_percent = missing_percent
)
View(missing_df)
library(tidyverse)
library(lubridate)
library(skimr)
library(dplyr)
life_exp <- read.csv("data/Life Expectancy Data.csv")
setwd("~/Desktop/Machine Learning and Data Analysis/Coding Temple/Coding-Temple-Teaching-Sessions/M04 - R Programming")
setwd("~/Desktop/Machine Learning and Data Analysis/Coding Temple/Coding-Temple-Teaching-Sessions/M04 - R Programming")
life_exp <- read.csv("data/Life Expectancy Data.csv")
ggplot(missing_df, aes(x = reorder(variable, missing_percent),
y = missing_percent)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal() +
labs(title = "Percentage of Missing Values by Variable",
x = "Variables", y = "Missing Percentage")
View(life_exp)
View(life_exp)
View(life_exp)
View(life_exp)
life_clean <- life_exp %>%
mutate(
Year = as.Date(paste0(Year, "-01-01")),  # Convert Year to Date format
# Create a Development Status variable
Development_Status = ifelse(Status == "Developing", "Developing", "Developed"),
GDP_per_capita = GDP / Population  # Create new meaningful variable for GDP per capita
) %>%
filter(!is.na(Life.expectancy))  # Remove rows with missing life expectancy values
View(life_clean)
country_stats <- life_clean %>%
group_by(Country,Development_Status) %>%
summarise(
Avg_Life_Exp = mean(Life.expectancy),
Avg_GDP_per_capita = mean(GDP_per_capita),
Avg_Schooling = mean(Schooling, na.rm = TRUE),
Avg_BMI = mean(BMI, na.rm = TRUE))  %>%
arrange(desc(Avg_Life_Exp))
View(country_stats)
this is a code cell
# this is a code cell
yearly_trends <- life_clean %>%
group_by(Year, Development_Status) %>%
summarise(
Avg_Life_Exp = mean(Life.expectancy),
Avg_GDP_per_capita = mean(GDP_per_capita),
Avg_Alcohol = mean(Alcohol, na.rm = TRUE),
Avg_BMI = mean(BMI, na.rm = TRUE)
) %>%
ungroup()
time_plot <- ggplot(yearly_trends,
aes(x = Year, y = Avg_Life_Exp, color = Development_Status)) +
geom_line(linewidth = 1) +
geom_point() +
theme_minimal() +
labs(title = "Life Expectancy Trends Over Time",
subtitle = "Comparing Developed vs Developing Countries",
x = "Year", y = "Average Life Expectancy", color = "Development Status") +
theme(legend.position = "bottom")
print(time_plot)
View(yearly_trends)
scatter_plot <- ggplot(life_clean,
aes(x = GDP_per_capita, y = Life.expectancy, color = Development_Status)) +
geom_point(alpha = 0.6) +
scale_x_log10() +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(title = "Life Expectancy vs GDP per Capita",
x = "GDP per Capita (log scale)", y = "Life Expectancy", color = "Development Status")
print(scatter_plot)
box_plot <- ggplot(life_clean,
aes(x = Development_Status, y = Life.expectancy, fill = Development_Status)) +
geom_boxplot() +
geom_jitter(alpha = 0.1) +
theme_minimal() +
labs(title = "Life Expectancy Distribution by Development Status",
x = "Development Status", y = "Life Expectancy")
print(box_plot)
t_test_result <- t.test(Life.expectancy ~ Development_Status, data = life_clean)
print(t_test_result)
correlation_matrix <- life_clean %>%
select(Life.expectancy, GDP_per_capita, Schooling, BMI) %>%
cor(use = "complete.obs")
print(correlation_matrix)
model <- lm(Life.expectancy ~ GDP_per_capita + Schooling + BMI, data = life_clean)
summary(model)
View(life_exp)
setwd("~/Desktop/Machine Learning and Data Analysis/Coding Temple/Coding-Temple-Teaching-Sessions/M04 - R Programming")
```{}
library(tidyverse)
happiness_df <- read.csv('data/WHR2023.csv')
View(happiness_df)
happiness_df <- read.csv('data/WHR2023.csv')
summary(happiness_df)
head(happiness_df)
happiness_df <- read.csv('data/WHR2023.csv')
summary(happiness_df)
head(happiness_df)
skim(happiness_df)
median_GDP_per_capita <- median(happiness_df$Logged.GDP.per.capita)
median_GDP_per_capita <- median(happiness_df$Logged.GDP.per.capita)
new_df <- happiness_df %>%
mutate(GDP = ifelse(Logged.GDP.per.capita > median_GDP_per_capita, "High GDP", "Low GDP"))
View(new_df)
median_GDP_per_capita <- median(happiness_df$Logged.GDP.per.capita)
new_df <- happiness_df %>%
mutate(GDP = ifelse(Logged.GDP.per.capita > median_GDP_per_capita, "High GDP", "Low GDP")) %>%
arrange(Logged.GDP.per.capita,descending)
median_GDP_per_capita <- median(happiness_df$Logged.GDP.per.capita)
new_df <- happiness_df %>%
mutate(GDP = ifelse(Logged.GDP.per.capita > median_GDP_per_capita, "High GDP", "Low GDP")) %>%
arrange(desc(Logged.GDP.per.capita))
View(new_df)
median_GDP_per_capita <- median(happiness_df$Logged.GDP.per.capita)
new_df <- happiness_df %>%
mutate(GDP = ifelse(Logged.GDP.per.capita > median_GDP_per_capita, "High GDP", "Low GDP")) %>%
arrange(desc(Logged.GDP.per.capita)) %>% filter(!is.na(Ladder.score))
median_GDP_per_capita <- median(happiness_df$Logged.GDP.per.capita)
new_df <- happiness_df %>%
mutate(GDP = ifelse(Logged.GDP.per.capita > median_GDP_per_capita, "High GDP", "Low GDP")) %>%
arrange(desc(Logged.GDP.per.capita)) %>% filter(!is.na(Ladder.score))
avPlots(model)
install.packages('car')
library(car)
library(tidyverse)
library(lubridate)
library(skimr)
library(dplyr)
library(car)
life_exp <- read.csv("data/Life Expectancy Data.csv")
avPlots(model)
library(tidyverse)
library(lubridate)
library(skimr)
library(dplyr)
library(car)
life_exp <- read.csv("data/Life Expectancy Data.csv")
str(life_exp)  # View the structure of the dataset
head(life_exp)  # Preview the first few rows
summary(life_exp)  # Summary statistics of the dataset
skim(life_exp)  # Detailed skim of the dataset
missing_data <- colSums(is.na(life_exp))
missing_percent <- (missing_data/nrow(life_exp))*100
missing_df <- data.frame(
variable = names(missing_data),
missing_percent = missing_percent
)
ggplot(missing_df, aes(x = reorder(variable, missing_percent),
y = missing_percent)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal() +
labs(title = "Percentage of Missing Values by Variable",
x = "Variables", y = "Missing Percentage")
life_clean <- life_exp %>%
mutate(
Year = as.Date(paste0(Year, "-01-01")),  # Convert Year to Date format
# Create a Development Status variable
Development_Status = ifelse(Status == "Developing", "Developing", "Developed"),
GDP_per_capita = GDP / Population  # Create new meaningful variable for GDP per capita
) %>%
filter(!is.na(Life.expectancy))  # Remove rows with missing life expectancy values
country_stats <- life_clean %>%
group_by(Country,Development_Status) %>%
summarise(
Avg_Life_Exp = mean(Life.expectancy),
Avg_GDP_per_capita = mean(GDP_per_capita),
Avg_Schooling = mean(Schooling, na.rm = TRUE),
Avg_BMI = mean(BMI, na.rm = TRUE))  %>%
arrange(desc(Avg_Life_Exp))
yearly_trends <- life_clean %>%
group_by(Year, Development_Status) %>%
summarise(
Avg_Life_Exp = mean(Life.expectancy),
Avg_GDP_per_capita = mean(GDP_per_capita),
Avg_Alcohol = mean(Alcohol, na.rm = TRUE),
Avg_BMI = mean(BMI, na.rm = TRUE)
) %>%
ungroup()
time_plot <- ggplot(yearly_trends,
aes(x = Year, y = Avg_Life_Exp, color = Development_Status)) +
geom_line(linewidth = 1) +
geom_point() +
theme_minimal() +
labs(title = "Life Expectancy Trends Over Time",
subtitle = "Comparing Developed vs Developing Countries",
x = "Year", y = "Average Life Expectancy", color = "Development Status") +
theme(legend.position = "bottom")
print(time_plot)
scatter_plot <- ggplot(life_clean,
aes(x = GDP_per_capita, y = Life.expectancy, color = Development_Status)) +
geom_point(alpha = 0.6) +
scale_x_log10() +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(title = "Life Expectancy vs GDP per Capita",
x = "GDP per Capita (log scale)", y = "Life Expectancy", color = "Development Status")
print(scatter_plot)
box_plot <- ggplot(life_clean,
aes(x = Development_Status, y = Life.expectancy, fill = Development_Status)) +
geom_boxplot() +
geom_jitter(alpha = 0.1) +
theme_minimal() +
labs(title = "Life Expectancy Distribution by Development Status",
x = "Development Status", y = "Life Expectancy")
print(box_plot)
t_test_result <- t.test(Life.expectancy ~ Development_Status, data = life_clean)
print(t_test_result)
correlation_matrix <- life_clean %>%
select(Life.expectancy, GDP_per_capita, Schooling, BMI) %>%
cor(use = "complete.obs")
print(correlation_matrix)
model <- lm(Life.expectancy ~ GDP_per_capita + Schooling + BMI, data = life_clean)
summary(model)
avPlots(model)
library(tidyverse)
library(lubridate)
library(skimr)
library(dplyr)
library(car)
life_exp <- read.csv("data/Life Expectancy Data.csv")
str(life_exp)  # View the structure of the dataset
head(life_exp)  # Preview the first few rows
summary(life_exp)  # Summary statistics of the dataset
skim(life_exp)  # Detailed skim of the dataset
missing_data <- colSums(is.na(life_exp))
missing_percent <- (missing_data/nrow(life_exp))*100
missing_df <- data.frame(
variable = names(missing_data),
missing_percent = missing_percent
)
ggplot(missing_df, aes(x = reorder(variable, missing_percent),
y = missing_percent)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal() +
labs(title = "Percentage of Missing Values by Variable",
x = "Variables", y = "Missing Percentage")
life_clean <- life_exp %>%
mutate(
Year = as.Date(paste0(Year, "-01-01")),  # Convert Year to Date format
# Create a Development Status variable
Development_Status = ifelse(Status == "Developing", "Developing", "Developed"),
GDP_per_capita = GDP / Population  # Create new meaningful variable for GDP per capita
) %>%
filter(!is.na(Life.expectancy))  # Remove rows with missing life expectancy values
yearly_trends <- life_clean %>%
group_by(Year, Development_Status) %>%
summarise(
Avg_Life_Exp = mean(Life.expectancy),
Avg_GDP_per_capita = mean(GDP_per_capita),
Avg_Alcohol = mean(Alcohol, na.rm = TRUE),
Avg_BMI = mean(BMI, na.rm = TRUE)
) %>%
ungroup()
time_plot <- ggplot(yearly_trends,
aes(x = Year, y = Avg_Life_Exp, color = Development_Status)) +
geom_line(linewidth = 1) +
geom_point() +
theme_minimal() +
labs(title = "Life Expectancy Trends Over Time",
subtitle = "Comparing Developed vs Developing Countries",
x = "Year", y = "Average Life Expectancy", color = "Development Status") +
theme(legend.position = "bottom")
print(time_plot)
scatter_plot <- ggplot(life_clean,
aes(x = GDP_per_capita, y = Life.expectancy, color = Development_Status)) +
geom_point(alpha = 0.6) +
scale_x_log10() +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(title = "Life Expectancy vs GDP per Capita",
x = "GDP per Capita (log scale)", y = "Life Expectancy", color = "Development Status")
print(scatter_plot)
box_plot <- ggplot(life_clean,
aes(x = Development_Status, y = Life.expectancy, fill = Development_Status)) +
geom_boxplot() +
geom_jitter(alpha = 0.1) +
theme_minimal() +
labs(title = "Life Expectancy Distribution by Development Status",
x = "Development Status", y = "Life Expectancy")
print(box_plot)
t_test_result <- t.test(Life.expectancy ~ Development_Status, data = life_clean)
print(t_test_result)
correlation_matrix <- life_clean %>%
select(Life.expectancy, GDP_per_capita, Schooling, BMI) %>%
cor(use = "complete.obs")
print(correlation_matrix)
model <- lm(Life.expectancy ~ GDP_per_capita + Schooling + BMI, data = life_clean)
summary(model)
avPlots(model)
library(tidyverse)
library(lubridate)
library(skimr)
library(dplyr)
library(car)
life_exp <- read.csv("data/Life Expectancy Data.csv")
library(tidyverse)
library(lubridate)
library(skimr)
library(dplyr)
library(car)
life_exp <- read.csv("data/Life Expectancy Data.csv")
View(life_exp)
str(life_exp)  # View the structure of the dataset
head(life_exp)  # Preview the first few rows
summary(life_exp)  # Summary statistics of the dataset
skim(life_exp)  # Detailed skim of the dataset
View(life_exp)
View(life_exp)
missing_data <- colSums(is.na(life_exp))
missing_percent <- (missing_data/nrow(life_exp))*100
missing_df <- data.frame(
variable = names(missing_data),
missing_percent = missing_percent
)
View(missing_df)
ggplot(missing_df, aes(x = reorder(variable, missing_percent),
y = missing_percent)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_minimal() +
labs(title = "Percentage of Missing Values by Variable",
x = "Variables", y = "Missing Percentage")
View(missing_df)
life_clean <- life_exp %>%
mutate(
Year = as.Date(paste0(Year, "-01-01")),  # Convert Year to Date format
# Create a Development Status variable
Development_Status = ifelse(Status == "Developing", "Developing", "Developed"),
GDP_per_capita = GDP / Population  # Create new meaningful variable for GDP per capita
) %>%
filter(!is.na(Life.expectancy))  # Remove rows with missing life expectancy values
View(life_clean)
country_stats <- life_clean %>%
group_by(Country,Development_Status) %>%
summarise(
Avg_Life_Exp = mean(Life.expectancy),
Avg_GDP_per_capita = mean(GDP_per_capita),
Avg_Schooling = mean(Schooling, na.rm = TRUE),
Avg_BMI = mean(BMI, na.rm = TRUE))  %>%
arrange(desc(Avg_Life_Exp))
View(country_stats)
View(life_clean)
yearly_trends <- life_clean %>%
group_by(Year, Development_Status) %>%
summarise(
Avg_Life_Exp = mean(Life.expectancy),
Avg_GDP_per_capita = mean(GDP_per_capita),
Avg_Alcohol = mean(Alcohol, na.rm = TRUE),
Avg_BMI = mean(BMI, na.rm = TRUE)
) %>%
ungroup()
time_plot <- ggplot(yearly_trends,
aes(x = Year, y = Avg_Life_Exp, color = Development_Status)) +
geom_line(linewidth = 1) +
geom_point() +
theme_minimal() +
labs(title = "Life Expectancy Trends Over Time",
subtitle = "Comparing Developed vs Developing Countries",
x = "Year", y = "Average Life Expectancy", color = "Development Status") +
theme(legend.position = "bottom")
print(time_plot)
scatter_plot <- ggplot(life_clean,
aes(x = GDP_per_capita, y = Life.expectancy, color = Development_Status)) +
geom_point(alpha = 0.6) +
scale_x_log10() +
geom_smooth(method = "lm", se = FALSE) +
theme_minimal() +
labs(title = "Life Expectancy vs GDP per Capita",
x = "GDP per Capita (log scale)", y = "Life Expectancy", color = "Development Status")
print(scatter_plot)
box_plot <- ggplot(life_clean,
aes(x = Development_Status, y = Life.expectancy, fill = Development_Status)) +
geom_boxplot() +
geom_jitter(alpha = 0.1) +
theme_minimal() +
labs(title = "Life Expectancy Distribution by Development Status",
x = "Development Status", y = "Life Expectancy")
print(box_plot)
t_test_result <- t.test(Life.expectancy ~ Development_Status, data = life_clean)
print(t_test_result)
correlation_matrix <- life_clean %>%
select(Life.expectancy, GDP_per_capita, Schooling, BMI) %>%
cor(use = "complete.obs")
print(correlation_matrix)
model <- lm(Life.expectancy ~ GDP_per_capita + Schooling + BMI, data = life_clean)
summary(model)
